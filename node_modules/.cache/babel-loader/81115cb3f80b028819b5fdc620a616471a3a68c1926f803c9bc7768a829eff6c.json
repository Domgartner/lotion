{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nfunction Sidebar(_ref) {\n  _s();\n  let {\n    notes,\n    addNote,\n    activeNote,\n    setActiveNote\n  } = _ref;\n  const [isNotesListVisible, setIsNotesListVisible] = useState(true);\n  function noteToggle() {\n    setIsNotesListVisible(prevState => !prevState);\n  }\n  ;\n\n  // function addNote() {\n  //     const newNoteId = notes.length + 1;\n  //     const newNote = { id: newNoteId, title: \"Untitled\", content: \"...\" };\n  //     setNotes([...notes, newNote]);\n  //     navigate(`/notes/${newNoteId}/edit`, { state: { noteId: newNoteId } });\n\n  //   }\n  //   const noNotesMessage = notes.length === 0 && <div id=\"no-note\">No Notes Yet</div>;\n  //    return (\n  //         <div className='notes-list-cont' style={{ display: isNotesListVisible ? '' : 'none' }}>\n  //             <div className='notes-head'>\n  //                 <h2>Notes</h2>\n  //                 <div className='plus-container' onClick={() => {addNote()}}>\n  //                     <i>&#43;</i>\n  //                 </div>\n  //             </div>\n  //             <div className='notes-list-body'>\n  //                 { notes.length === 0 ? <h3 id='no-notes'>No Notes Yet</h3> : null }\n  //                 <div className='notes-list'>\n  //                 { notes.map(note => (\n  //                     <Link to = {`/notes/${note.id}`}>\n  //                         <div className={`note ${note.id === activeNote && \"active\"}`} key={note.id} onClick = {() => setActiveNote(note.id)}>\n  //                             <h2>{note.title}</h2>\n  //                             <small className=\"note-meta\">\n  //                                 {new Date(note.dateCreated).toLocaleDateString(\"en-US\", {\n  //                                     month: \"long\",\n  //                                     day: \"numeric\",\n  //                                     year: \"numeric\",\n  //                                     hour: \"numeric\",\n  //                                     minute: \"numeric\",\n  //                                     hour12: true,\n  //                                 })}\n  //                             </small>\n  //                             <p>{note.body && note.body.substr(0, 20).replace(/<\\/?[^>]+(>|$)/g, \"\") + \"...\"}</p>\n  //                         </div>\n  //                     </Link>\n  //                 ))}\n  //                 </div>\n  //             </div>\n  //         </div>\n  //   );\n}\n_s(Sidebar, \"leIY2stAdTqmOtKj1se8cj/MchI=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["Link","useEffect","useState","Sidebar","_ref","_s","notes","addNote","activeNote","setActiveNote","isNotesListVisible","setIsNotesListVisible","noteToggle","prevState","_c","$RefreshReg$"],"sources":["/Users/dominicgartner/Desktop/ENSF 381/assignment-06-lotion-Domgartner-1/src/Sidebar.js"],"sourcesContent":["import {Link} from 'react-router-dom'\nimport { useEffect, useState } from \"react\";\n\nfunction Sidebar({ notes, addNote, activeNote, setActiveNote }) {\n    const [isNotesListVisible, setIsNotesListVisible] = useState(true);\n    function noteToggle() {\n        setIsNotesListVisible(prevState => !prevState);\n    };\n\n\n    // function addNote() {\n    //     const newNoteId = notes.length + 1;\n    //     const newNote = { id: newNoteId, title: \"Untitled\", content: \"...\" };\n    //     setNotes([...notes, newNote]);\n    //     navigate(`/notes/${newNoteId}/edit`, { state: { noteId: newNoteId } });\n    \n    //   }\n//   const noNotesMessage = notes.length === 0 && <div id=\"no-note\">No Notes Yet</div>;\n//    return (\n//         <div className='notes-list-cont' style={{ display: isNotesListVisible ? '' : 'none' }}>\n//             <div className='notes-head'>\n//                 <h2>Notes</h2>\n//                 <div className='plus-container' onClick={() => {addNote()}}>\n//                     <i>&#43;</i>\n//                 </div>\n//             </div>\n//             <div className='notes-list-body'>\n//                 { notes.length === 0 ? <h3 id='no-notes'>No Notes Yet</h3> : null }\n//                 <div className='notes-list'>\n//                 { notes.map(note => (\n//                     <Link to = {`/notes/${note.id}`}>\n//                         <div className={`note ${note.id === activeNote && \"active\"}`} key={note.id} onClick = {() => setActiveNote(note.id)}>\n//                             <h2>{note.title}</h2>\n//                             <small className=\"note-meta\">\n//                                 {new Date(note.dateCreated).toLocaleDateString(\"en-US\", {\n//                                     month: \"long\",\n//                                     day: \"numeric\",\n//                                     year: \"numeric\",\n//                                     hour: \"numeric\",\n//                                     minute: \"numeric\",\n//                                     hour12: true,\n//                                 })}\n//                             </small>\n//                             <p>{note.body && note.body.substr(0, 20).replace(/<\\/?[^>]+(>|$)/g, \"\") + \"...\"}</p>\n//                         </div>\n//                     </Link>\n//                 ))}\n//                 </div>\n//             </div>\n//         </div>\n//   );\n}\nexport default Sidebar;"],"mappings":";AAAA,SAAQA,IAAI,QAAO,kBAAkB;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,OAAOA,CAAAC,IAAA,EAAgD;EAAAC,EAAA;EAAA,IAA/C;IAAEC,KAAK;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAL,IAAA;EAC1D,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClE,SAASU,UAAUA,CAAA,EAAG;IAClBD,qBAAqB,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC;EAClD;EAAC;;EAGD;EACA;EACA;EACA;EACA;;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAACR,EAAA,CAhDQF,OAAO;AAAAW,EAAA,GAAPX,OAAO;AAiDhB,eAAeA,OAAO;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}